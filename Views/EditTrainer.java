/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DAO.ManagerDAO;
import DAO.TrainerDAO;
import DTO.Mappers.EGender;
import Model.Manager;

import Model.Trainer;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import util.JDBCUtil;

/**
 *
 * @author auxlu
 */
public class EditTrainer extends javax.swing.JFrame {

    JDBCUtil dbUtil = new JDBCUtil();
    Connection connection = null;
    TrainerDAO trainerDAO = new TrainerDAO();
    Trainer trainer = new Trainer();
    ArrayList<Trainer> trainerList = new ArrayList<>();

    /**
     * Creates new form EditUser
     */
    public EditTrainer() {
        initComponents();
    }

    /**
     * The function "clean" clears all the text fields and resets the combo box and
     * formatted text
     * fields to their default values.
     */
    public void clean() {
        jTextFieldCPF.setText("");
        jTextFieldUsername.setText("");
        jTextFieldFirstName.setText("");
        jTextFieldLastName.setText("");
        jTextFieldEmail.setText("");
        jPasswordField.setText("");
        jFormattedBirthDate.setText("");
        jComboBoxGender.setSelectedIndex(0);
        jTextFieldPhone.setText("");
        jTextFieldCity.setText("");
        jTextFieldState.setText("");
        jTextFieldCountry.setText("");
        jTextFieldGym.setText("");
        jTextFieldCertification.setText("");
        jTextFieldSpeciality.setText("");
        jFormattedTextFieldYearsOfExperience.setText("");
        jFormattedTextFieldHourlyRate.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneEditClient = new javax.swing.JTabbedPane();
        jPanelEditClient = new javax.swing.JPanel();
        jLabelAddressContact2 = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabelUsername1 = new javax.swing.JLabel();
        jLabelLastName1 = new javax.swing.JLabel();
        jTextFieldLastName = new javax.swing.JTextField();
        jLabelFirstName1 = new javax.swing.JLabel();
        jTextFieldFirstName = new javax.swing.JTextField();
        jLabelGender1 = new javax.swing.JLabel();
        jTextFieldState = new javax.swing.JTextField();
        jLabelEmail1 = new javax.swing.JLabel();
        jLabelPassword1 = new javax.swing.JLabel();
        jFormattedBirthDate = new javax.swing.JFormattedTextField();
        jLabelInformation1 = new javax.swing.JLabel();
        jLabelBirthDate1 = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jLabelState1 = new javax.swing.JLabel();
        jTextFieldCity = new javax.swing.JTextField();
        jLabelPhone1 = new javax.swing.JLabel();
        jTextFieldPhone = new javax.swing.JTextField();
        jLabelCountry1 = new javax.swing.JLabel();
        jTextFieldCountry = new javax.swing.JTextField();
        jTextFieldGym = new javax.swing.JTextField();
        jLabelGym = new javax.swing.JLabel();
        jLabelAddressContact3 = new javax.swing.JLabel();
        jLabelEmail3 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabelOccupationCPF = new javax.swing.JLabel();
        jLabelHourlyRate = new javax.swing.JLabel();
        jLabelSpeciality = new javax.swing.JLabel();
        jLabelYearsOfExperience = new javax.swing.JLabel();
        jLabelSalary = new javax.swing.JLabel();
        jTextFieldCPF = new javax.swing.JTextField();
        jTextFieldCertification = new javax.swing.JTextField();
        jLabelCertification = new javax.swing.JLabel();
        jFormattedTextFieldYearsOfExperience = new javax.swing.JFormattedTextField();
        jPasswordField = new javax.swing.JPasswordField();
        jFormattedTextFieldHourlyRate = new javax.swing.JFormattedTextField();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextFieldSpeciality = new javax.swing.JTextField();
        jTextFieldSalary = new javax.swing.JTextField();
        jButtonRegister = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonClean = new javax.swing.JButton();
        jButtonShowAllTrainers = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPaneEditClient.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPaneEditClient.setPreferredSize(new java.awt.Dimension(1121, 531));

        jPanelEditClient.setPreferredSize(new java.awt.Dimension(1121, 531));
        jPanelEditClient.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelAddressContact2.setText("Address and Contact");
        jPanelEditClient.add(jLabelAddressContact2,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, -1, -1));

        jTextFieldUsername.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldUsername.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsernameActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        jLabelUsername1.setText("Username:");
        jPanelEditClient.add(jLabelUsername1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabelLastName1.setText("laststName:");
        jPanelEditClient.add(jLabelLastName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, -1, -1));

        jTextFieldLastName.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldLastName.setPreferredSize(new java.awt.Dimension(320, 22));
        jTextFieldLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLastNameActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 430, -1));

        jLabelFirstName1.setText("firstName:");
        jPanelEditClient.add(jLabelFirstName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        jTextFieldFirstName.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldFirstName.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFirstNameActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, -1));

        jLabelGender1.setText("Gender:");
        jPanelEditClient.add(jLabelGender1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, -1, -1));

        jTextFieldState.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldState.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStateActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldState, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, -1, -1));

        jLabelEmail1.setText("City:");
        jPanelEditClient.add(jLabelEmail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, -1, -1));

        jLabelPassword1.setText("Password:");
        jPanelEditClient.add(jLabelPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, -1));

        jFormattedBirthDate.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanelEditClient.add(jFormattedBirthDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 90, -1));

        jLabelInformation1.setText("User Information");
        jPanelEditClient.add(jLabelInformation1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, -1));

        jLabelBirthDate1.setText("Birth Date:");
        jPanelEditClient.add(jLabelBirthDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, -1, -1));

        jComboBoxGender
                .setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MALE", "FEMALE", "OTHER", " " }));
        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jComboBoxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, -1, -1));

        jLabelState1.setText("State:");
        jPanelEditClient.add(jLabelState1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, -1, -1));

        jTextFieldCity.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldCity.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCityActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 210, -1, -1));

        jLabelPhone1.setText("Phone:");
        jPanelEditClient.add(jLabelPhone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        jTextFieldPhone.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldPhone.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPhoneActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        jLabelCountry1.setText("Country:");
        jPanelEditClient.add(jLabelCountry1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, -1, -1));

        jTextFieldCountry.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldCountry.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCountryActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, -1, -1));

        jTextFieldGym.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldGym.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldGym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGymActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldGym, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, -1, -1));

        jLabelGym.setText("Gym");
        jPanelEditClient.add(jLabelGym, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, -1, -1));

        jLabelAddressContact3.setText("Trainer Info");
        jPanelEditClient.add(jLabelAddressContact3,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, -1));

        jLabelEmail3.setText("Email:");
        jPanelEditClient.add(jLabelEmail3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jTextFieldEmail.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldEmail.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, -1, -1));

        jLabelOccupationCPF.setText("CPF");
        jPanelEditClient.add(jLabelOccupationCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabelHourlyRate.setText("Hourly Rate: ");
        jPanelEditClient.add(jLabelHourlyRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, -1, -1));

        jLabelSpeciality.setText("Speciality");
        jPanelEditClient.add(jLabelSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        jLabelYearsOfExperience.setText("Years of Experience:");
        jPanelEditClient.add(jLabelYearsOfExperience,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, -1, -1));

        jLabelSalary.setText("Salary");
        jPanelEditClient.add(jLabelSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 340, -1, -1));

        jTextFieldCPF.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldCPF.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCPFActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, -1, -1));

        jTextFieldCertification.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldCertification.setPreferredSize(new java.awt.Dimension(100, 22));
        jTextFieldCertification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCertificationActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jTextFieldCertification,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, -1, -1));

        jLabelCertification.setText("Certification");
        jPanelEditClient.add(jLabelCertification, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, -1));

        jFormattedTextFieldYearsOfExperience.setMinimumSize(new java.awt.Dimension(100, 22));
        jFormattedTextFieldYearsOfExperience.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanelEditClient.add(jFormattedTextFieldYearsOfExperience,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, -1, -1));

        jPasswordField.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanelEditClient.add(jPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        jFormattedTextFieldHourlyRate.setMinimumSize(new java.awt.Dimension(100, 22));
        jFormattedTextFieldHourlyRate.setPreferredSize(new java.awt.Dimension(100, 22));
        jFormattedTextFieldHourlyRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldHourlyRateActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jFormattedTextFieldHourlyRate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, -1, -1));

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 150, 50));

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, 150, 50));
        jPanelEditClient.add(jTextFieldSpeciality,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 100, -1));

        jTextFieldSalary.setMinimumSize(new java.awt.Dimension(200, 30));
        jTextFieldSalary.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanelEditClient.add(jTextFieldSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 340, -1, -1));

        jButtonRegister.setText("Register");
        jButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegisterActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jButtonRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 150, 50));

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jButtonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 150, 50));

        jButtonClean.setText("Clear");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jButtonClean, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 150, 50));

        jButtonShowAllTrainers.setText("Show All Trainers");
        jButtonShowAllTrainers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowAllTrainersActionPerformed(evt);
            }
        });
        jPanelEditClient.add(jButtonShowAllTrainers,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 150, 50));

        tableModel = new DefaultTableModel(
                new Object[][] {},
                new String[] { "CPF", "Username", "First Name", "Last Name", "Email", "Birth Date", "Gender", "Gym",
                        "City", "Phone", "Certification", "Speciality", "Years of Experience", "Salary" });

        jTable2.setModel(tableModel);
        jScrollPane2.setViewportView(jTable2);

        jPanelEditClient.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 950, 180));

        jTabbedPaneEditClient.addTab("Edit Trainer", jPanelEditClient);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPaneEditClient, javax.swing.GroupLayout.DEFAULT_SIZE, 1083,
                                        Short.MAX_VALUE)
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPaneEditClient, javax.swing.GroupLayout.DEFAULT_SIZE, 747,
                                Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonShowAllTrainersActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonShowAllTrainersActionPerformed
        pupulateTableWithTrainers();
    }// GEN-LAST:event_jButtonShowAllTrainersActionPerformed

    private void jFormattedTextFieldHourlyRateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jFormattedTextFieldHourlyRateActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jFormattedTextFieldHourlyRateActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonSearchActionPerformed
        // Call the findByCPF method to get the client
        trainer = trainerDAO.findByCPF(dbUtil.returnCPF());

        if (trainer != null) {
            fillComponentsWithManager(trainer);

            JOptionPane.showMessageDialog(this, "trainer found.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            clean();
            JOptionPane.showMessageDialog(this, "trainer not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonCleanActionPerformed
        clean();
    }// GEN-LAST:event_jButtonCleanActionPerformed

    private void jButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonRegisterActionPerformed
        trainer = extractTrainerData();

        if (trainer != null) {
            try {
                // Call the addManager method on the ManagerDAO instance
                boolean added = trainerDAO.addTrainer(trainer);
                if (added) {
                    JOptionPane.showMessageDialog(null, "Trainer registered successfully.", "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                    pupulateTableWithTrainers();
                }

            } catch (DateTimeParseException e) {
                // Handle date format exception
                JOptionPane.showMessageDialog(null,
                        "Invalid date format. Please enter the date in the format 'dd-MM-yyyy'.", "Error",
                        JOptionPane.ERROR_MESSAGE);
            } catch (NumberFormatException e) {
                // Handle number format exception
                JOptionPane.showMessageDialog(null, "Invalid number format. Please enter a valid income value.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                // Handle any other exceptions
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "An error occurred. Please try again.", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Trainer data is invalid. Please check the entered values.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_jButtonRegisterActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            trainerDAO.deleteTrainer(dbUtil.returnCPF());
            pupulateTableWithTrainers();
        } catch (NullPointerException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while deleting trainer: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonUpdateActionPerformed
        try {
            // Extract manager data from the components
            trainer = extractTrainerData();

            // Check if managerDAO is not null
            if (trainerDAO == null) {
                JOptionPane.showMessageDialog(null, "trainerDAO is null", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Check if manager is not null
            if (trainer == null) {
                JOptionPane.showMessageDialog(null, "trainer is null", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Call the updateManager method to update the manager
            trainerDAO.updateTrainer(trainer.getCPF(), trainer);
            pupulateTableWithTrainers();
        } catch (NullPointerException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while updating trainer: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTextFieldCertificationActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCertificationActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCertificationActionPerformed

    private void jTextFieldCPFActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCPFActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCPFActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldGymActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldGymActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldGymActionPerformed

    private void jTextFieldCountryActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCountryActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCountryActionPerformed

    private void jTextFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldPhoneActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldPhoneActionPerformed

    private void jTextFieldCityActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCityActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCityActionPerformed

    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBoxGenderActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jComboBoxGenderActionPerformed

    private void jTextFieldStateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldStateActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldStateActionPerformed

    private void jTextFieldFirstNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldFirstNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldFirstNameActionPerformed

    private void jTextFieldLastNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldLastNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldLastNameActionPerformed

    private void jTextFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldUsernameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldUsernameActionPerformed

    private void jTextFieldIncomeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldIncomeActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldIncomeActionPerformed

    private void jTextFieldOccupationActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldOccupationActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldOccupationActionPerformed

    private void jTextFieldCardHolderNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCardHolderNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCardHolderNameActionPerformed

    private void jTextFieldUsername1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldUsername1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldUsername1ActionPerformed

    private void jTextFieldLastName1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldLastName1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldLastName1ActionPerformed

    private void jTextFieldFirstName1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldFirstName1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldFirstName1ActionPerformed

    private void jTextFieldState1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldState1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldState1ActionPerformed

    private void jComboBoxGender1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBoxGender1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jComboBoxGender1ActionPerformed

    private void jTextFieldCity1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCity1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCity1ActionPerformed

    private void jTextFieldPhone1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldPhone1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldPhone1ActionPerformed

    private void jTextFieldCountry1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCountry1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCountry1ActionPerformed

    private void jTextFieldIncome1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldIncome1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldIncome1ActionPerformed

    private void jTextFieldEmail1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldEmail1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldEmail1ActionPerformed

    private void jTextFieldOccupation1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldOccupation1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldOccupation1ActionPerformed

    private void jTextFieldCardHolderName1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldCardHolderName1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldCardHolderName1ActionPerformed

    private Trainer extractTrainerData() {
        String cpf = jTextFieldCPF.getText();
        String existingCPF = cpf;
        String username = jTextFieldUsername.getText();
        String firstName = jTextFieldFirstName.getText();
        String lastName = jTextFieldLastName.getText();
        String email = jTextFieldEmail.getText();
        char[] passwordChars = jPasswordField.getPassword();
        String password = new String(passwordChars);

        if (cpf.isEmpty() || username.isEmpty() || firstName.isEmpty() || lastName.isEmpty() || email.isEmpty()
                || password.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "Please fill in all required fields: CPF, username, first name, last name, email, and password.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("ddMMyyyy");
        LocalDate birthDate = null;
        try {
            birthDate = LocalDate.parse(jFormattedBirthDate.getText(), formatter);
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(null, "Invalid date format. Please enter the date in the format 'ddMMyyyy'.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }

        EGender gender = EGender.valueOf(jComboBoxGender.getSelectedItem().toString());
        String phoneNumber = jTextFieldPhone.getText();
        String city = jTextFieldCity.getText();
        String state = jTextFieldState.getText();
        String country = jTextFieldCountry.getText();
        String gym = jTextFieldGym.getText();
        String certification = jTextFieldCertification.getText();
        String hourlyRateStr = jFormattedTextFieldHourlyRate.getText();
        Double hourlyRate = Double.parseDouble(hourlyRateStr);
        String speciality = jTextFieldSpeciality.getText();
        String experienceStr = jFormattedTextFieldYearsOfExperience.getText();
        int experience = Integer.parseInt(experienceStr);

        Trainer trainer = new Trainer(cpf, username, firstName, lastName, email, password, phoneNumber, birthDate,
                gender, city, state, country, certification, speciality, gym, hourlyRate, experience);

        System.out.println(trainer.getCPF());

        // Check if the client is updating the CPF and if the new CPF already exists
        if (!cpf.equals(existingCPF) && dbUtil.cpfExists(cpf, "trainers")) {
            JOptionPane.showMessageDialog(null, "CPF already exists in the database.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return null;
        }

        return trainer;
    }

    public void pupulateTableWithTrainers() {
        // Retrieve the list of clients from the database
        List<Trainer> trainers = trainerDAO.getAllTrainers();

        // Clear the existing table data
        tableModel.setRowCount(0);
        // Populate the table with the client data
        for (Trainer trainer : trainers) {
            Object[] rowData = {
                    trainer.getCPF(),
                    trainer.getUsername(),
                    trainer.getFirstName(),
                    trainer.getLastName(),
                    trainer.getEmail(),
                    trainer.getBirthDate(),
                    trainer.getGender(),
                    trainer.getGym(),
                    trainer.getCity(),
                    trainer.getPhoneNumber(),
                    trainer.getCertification(),
                    trainer.getSpeciality(),
                    trainer.getYearsOfExperience(),
                    trainer.getSalary()
            };
            tableModel.addRow(rowData);
        }
    }

    private void fillComponentsWithManager(Trainer trainer) {
        jTextFieldCPF.setText(trainer.getCPF());
        jTextFieldUsername.setText(trainer.getUsername());
        jTextFieldFirstName.setText(trainer.getFirstName());
        jTextFieldLastName.setText(trainer.getLastName());
        jTextFieldEmail.setText(trainer.getEmail());
        jPasswordField.setText(trainer.getPassword());

        // Set other fields using client.getXYZ() methods
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("ddMMyyyy");
        String formattedBirthDate = trainer.getBirthDate().format(formatter);
        jFormattedBirthDate.setText(formattedBirthDate);
        jComboBoxGender.setSelectedItem(trainer.getGender().name());
        jTextFieldPhone.setText(trainer.getPhoneNumber());
        jTextFieldCity.setText(trainer.getCity());
        jTextFieldState.setText(trainer.getState());
        jTextFieldCountry.setText(trainer.getCountry());
        jTextFieldGym.setText(trainer.getGym());
        jTextFieldCertification.setText(trainer.getCertification());
        jTextFieldSpeciality.setText(trainer.getSpeciality());
        jFormattedTextFieldHourlyRate.setText(String.valueOf(trainer.getHourlyRate()));
        jFormattedTextFieldYearsOfExperience.setText(String.valueOf(trainer.getYearsOfExperience()));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditTrainer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonRegister;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonShowAllTrainers;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JFormattedTextField jFormattedBirthDate;
    private javax.swing.JFormattedTextField jFormattedTextFieldHourlyRate;
    private javax.swing.JFormattedTextField jFormattedTextFieldYearsOfExperience;
    private javax.swing.JLabel jLabelAddressContact2;
    private javax.swing.JLabel jLabelAddressContact3;
    private javax.swing.JLabel jLabelBirthDate1;
    private javax.swing.JLabel jLabelCertification;
    private javax.swing.JLabel jLabelCountry1;
    private javax.swing.JLabel jLabelEmail1;
    private javax.swing.JLabel jLabelEmail3;
    private javax.swing.JLabel jLabelFirstName1;
    private javax.swing.JLabel jLabelGender1;
    private javax.swing.JLabel jLabelGym;
    private javax.swing.JLabel jLabelHourlyRate;
    private javax.swing.JLabel jLabelInformation1;
    private javax.swing.JLabel jLabelLastName1;
    private javax.swing.JLabel jLabelOccupationCPF;
    private javax.swing.JLabel jLabelPassword1;
    private javax.swing.JLabel jLabelPhone1;
    private javax.swing.JLabel jLabelSalary;
    private javax.swing.JLabel jLabelSpeciality;
    private javax.swing.JLabel jLabelState1;
    private javax.swing.JLabel jLabelUsername1;
    private javax.swing.JLabel jLabelYearsOfExperience;
    private javax.swing.JPanel jPanelEditClient;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPaneEditClient;
    private javax.swing.JTable jTable2;
    private DefaultTableModel tableModel;
    private javax.swing.JTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldCertification;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldCountry;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldGym;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldPhone;
    private javax.swing.JTextField jTextFieldSalary;
    private javax.swing.JTextField jTextFieldSpeciality;
    private javax.swing.JTextField jTextFieldState;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables
}
